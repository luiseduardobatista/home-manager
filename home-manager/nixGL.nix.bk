{ pkgs, config }:

# Wrap a single package
pkg:

if config.nixGLPrefix == "" then
  pkg
else
  # Wrap the package's binaries with nixGL, while preserving the rest of
  # the outputs and derivation attributes.
  (pkg.overrideAttrs (old: {
    name = "nixGL-${pkg.name}";
    # Limpa as entradas de dependências para evitar dependências desnecessárias
    buildInputs = [ ];
    nativeBuildInputs = [ pkgs.makeWrapper ];

    # Desativa fases desnecessárias para não trazer dependências extras
    phases = [ "buildPhase" "installPhase" ];

    buildPhase = ''
      set -eo pipefail

      # Copia os arquivos originais de cada saída
      ${pkgs.lib.concatStringsSep "\n" (map (outputName: ''
        echo "Copying output ${outputName}"
        set -x
        cp -rs --no-preserve=mode "${pkg.${outputName}}" "''$${outputName}"
        set +x
      '') (old.outputs or [ "out" ]))}
    '';

    installPhase = ''
      # Remove todos os binários antigos
      rm -rf $out/bin/*

      # Recria os binários com o prefixo nixGL
      shopt -s nullglob
      for file in ${pkg.out}/bin/*; do
        echo "#!${pkgs.bash}/bin/bash" > "$out/bin/$(basename $file)"
        echo "exec -a \"\$0\" ${config.nixGLPrefix} $file \"\$@\"" >> "$out/bin/$(basename $file)"
        chmod +x "$out/bin/$(basename $file)"
      done
      shopt -u nullglob
    '';
  }))

